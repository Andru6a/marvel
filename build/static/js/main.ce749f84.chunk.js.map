{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","style","display","margin","xmlns","width","height","viewBox","fill","d","opacity","attributeName","dur","repeatCount","type","values","ErrorMesage","objectFit","src","img","alt","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharsLoaded","newCharList","ended","onScroll","window","removeEventListener","innerHeight","scrollY","document","body","offsetHeight","itemRefs","setRefs","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","addEventListener","componentWillUnmount","renderItems","arr","i","imgStyle","props","onCharSelected","onKeyDown","e","key","tabIndex","disabled","Skeleton","_Fragment","CharInfo","charId","componentDidUpdate","prevProps","prevState","skeleton","ErrorBoundary","componentDidCatch","errorInfo","console","log","App","selecedChar","decoration","ReactDOM","React","StrictMode","getElementById"],"mappings":"4QAqBeA,MAnBGA,IAEVC,eAAA,UAAQC,UAAU,cAAaC,SAAA,CAC3BC,cAAA,MAAIF,UAAU,aAAYC,SACtBF,eAAA,KAAGI,KAAK,IAAGF,SAAA,CACPC,cAAA,QAAAD,SAAM,WAAa,2BAG3BC,cAAA,OAAKF,UAAU,YAAWC,SACtBF,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAAD,SAAIC,cAAA,KAAGC,KAAK,IAAGF,SAAC,iBAAmB,IAEnCC,cAAA,MAAAD,SAAIC,cAAA,KAAGC,KAAK,IAAGF,SAAC,qBCFrBG,MAZCA,IAERF,cAAA,OAAMF,UAAU,UAASC,SACrBF,eAAA,OAAKM,MAAO,CAACC,QAAQ,QAASC,OAAQ,UAAYC,MAAM,6BAA6BC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAWV,SAAA,CAC7HC,cAAA,QAAMU,KAAK,eAAeC,EAAE,gFAAgFC,QAAQ,SACpHZ,cAAA,QAAMU,KAAK,eAAeC,EAAE,oNAAmNZ,SAC3OC,cAAA,oBAAkBa,cAAc,YAAYC,IAAI,QAAQC,YAAY,aAAaC,KAAK,SAASC,OAAO,6BCN3G,MAA0B,kCCU1BC,MARKA,IAGZlB,aADA,CACA,OAAKG,MAAO,CAACC,QAAS,QAASG,MAAO,QAASC,OAAQ,QAASW,UAAW,UAAWd,OAAQ,UAC9Fe,IAAKC,EAAKC,IAAI,UCsCPC,MA5Cf,MAAoBC,cAAA,IAAAC,EAAA,UAClBC,SAAW,4CAA4C,KACvDC,QAAU,0CAA0C,KACpDC,YAAc,IAAI,KAElBC,YAAcC,UACZ,IAAIC,QAAYC,MAAMC,GAEtB,IAAKF,EAAIG,GACP,MAAM,IAAIC,MAAM,mBAADC,OAAoBH,EAAG,cAAAG,OAAaL,EAAIM,SAGzD,aAAaN,EAAIO,QACjB,KAEFC,iBAAmBT,iBAAsC,IAA/BU,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGhB,EAAKG,YACtC,MAAMG,QAAYN,EAAKI,YAAY,GAADO,OAC7BX,EAAKC,SAAQ,8BAAAU,OAA6BI,EAAM,KAAAJ,OAAIX,EAAKE,UAE9D,OAAOI,EAAIa,KAAKC,QAAQC,IAAIrB,EAAKsB,sBACjC,KAEFC,aAAelB,UACb,MAAMC,QAAYkB,KAAKpB,YAAY,GAADO,OAC7Ba,KAAKvB,SAAQ,eAAAU,OAAcc,EAAE,KAAAd,OAAIa,KAAKtB,UAE3C,OAAOsB,KAAKF,oBAAoBhB,EAAIa,KAAKC,QAAQ,KACjD,KAEFE,oBAAuBI,IACd,CACLD,GAAIC,EAAKD,GACTE,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAAW,GAAAjB,OACtBe,EAAKE,YAAYC,MAAM,EAAG,KAAI,OACjC,6CACJC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAG1B,IACvB2B,KAAMT,EAAKQ,KAAK,GAAG1B,IACnB4B,OAAQV,EAAKU,OAAOC,UCvCX,G,MAAA,IAA0B,qCCQzC,MAAMC,UAAmBC,YAAUxC,cAAA,SAAAiB,WAAA,KAC/BwB,MAAQ,CACJd,KAAM,GACNe,SAAS,EACTC,OAAO,GACV,KAGDC,cAAgB,IAAI7C,EAAgB,KAMpC8C,aAAgBlB,IACZF,KAAKqB,SAAS,CAAEnB,OAAMe,SAAS,KAClC,KAEDK,cAAgB,KACZtB,KAAKqB,SAAS,CACVJ,SAAS,KAEhB,KAEDM,QAAU,KACNvB,KAAKqB,SAAS,CACVJ,SAAS,EACTC,OAAO,KAEd,KAEDM,WAAa,KACT,MAAMvB,EAAKwB,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAC5D3B,KAAKsB,gBACLtB,KAAKmB,cACApB,aAAaE,GACb2B,KAAK5B,KAAKoB,cACVS,MAAM7B,KAAKuB,UA3BpBO,oBACI9B,KAAKwB,aA6BTO,SACI,MAAM,KAAE7B,EAAI,QAAEe,EAAO,MAAEC,GAAUlB,KAAKgB,MAChCgB,EAAed,EAAQnE,cAACkB,EAAW,IAAM,KACzCgE,EAAUhB,EAAUlE,cAACE,EAAO,IAAM,KAClCiF,EAAYjB,GAAWC,EAAgC,KAAvBnE,cAACoF,EAAI,CAACjC,KAAMA,IAElD,OACItD,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACtBkF,EACAC,EACAC,EACDtF,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAC/BF,eAAA,KAAGC,UAAU,oBAAmBC,SAAA,CAAC,8BACFC,cAAA,SAAM,4CAGrCA,cAAA,KAAGF,UAAU,oBAAmBC,SAAC,0BAGjCC,cAAA,UAAQF,UAAU,sBACduF,QAASpC,KAAKwB,WAAW1E,SACzBC,cAAA,OAAKF,UAAU,QAAOC,SAAC,aAE3BC,cAAA,OAAKoB,IAAKkE,EAAShE,IAAI,UAAUxB,UAAU,kCAO/D,MAAMsF,EAAOG,IAAe,IAAd,KAAEpC,GAAMoC,EAClB,MAAM,KAAEnC,EAAI,YAAEC,EAAW,UAAEE,EAAS,SAAEG,EAAQ,KAAEE,GAAST,EAEzD,OACItD,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BC,cAAA,OAAKoB,IAAKmC,EAAWjC,IAAI,mBAAmBxB,UAAU,kBAAkBK,MAAqB,wEAAdoD,EAAsF,CAAEpC,UAAW,WAAc,KAChMtB,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BC,cAAA,KAAGF,UAAU,mBAAkBC,SAAEqD,IACjCpD,cAAA,KAAGF,UAAU,oBAAmBC,SAAEsD,IAClCxD,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BC,cAAA,KAAGC,KAAMyD,EAAU5D,UAAU,sBAAqBC,SAC9CC,cAAA,OAAKF,UAAU,QAAOC,SAAC,eAE3BC,cAAA,KAAGC,KAAM2D,EAAM9D,UAAU,2BAA0BC,SAC/CC,cAAA,OAAKF,UAAU,QAAOC,SAAC,qBAQhCgE,Q,MC3Ff,MAAMyB,UAAiBxB,YAAUxC,cAAA,SAAAiB,WAAA,KAC/BwB,MAAQ,CACNwB,SAAU,GACVvB,SAAS,EACTC,OAAO,EACPuB,gBAAgB,EAChBlD,OAAQ,IACRmD,WAAW,GACX,KAEFvB,cAAgB,IAAI7C,EAAgB,KAWpCqE,UAAapD,IACXS,KAAK4C,oBACL5C,KAAKmB,cACF7B,iBAAiBC,GACjBqC,KAAK5B,KAAK6C,eACVhB,MAAM7B,KAAKuB,UACd,KAEFqB,kBAAoB,KAClB5C,KAAKqB,SAAS,CACZoB,gBAAgB,KAElB,KAEFI,cAAiBC,IACf,IAAIC,GAAQ,EACRD,EAAYrD,OAAS,IACvBsD,GAAQ,GAGV/C,KAAKqB,UAASiB,IAAA,IAAC,SAAEE,EAAQ,OAAEjD,GAAQ+C,EAAA,MAAM,CACvCE,SAAU,IAAIA,KAAaM,GAC3B7B,SAAS,EACTwB,gBAAgB,EAChBlD,OAAQA,EAAS,EACjBmD,UAAWK,OAEb,KAEFxB,QAAU,KACRvB,KAAKqB,SAAS,CACZJ,SAAS,EACTC,OAAO,KAET,KAEF8B,SAAW,KACLhD,KAAKgB,MAAMyB,iBACXzC,KAAKgB,MAAM0B,WACbO,OAAOC,oBAAoB,QAASlD,KAAKgD,UAGvCC,OAAOE,YAAcF,OAAOG,SAAWC,SAASC,KAAKC,eACvDvD,KAAK4C,oBACL5C,KAAK2C,UAAU3C,KAAKgB,MAAMzB,WAE5B,KAEFiE,SAAW,GAAG,KAEdC,QAAUC,IACR1D,KAAKwD,SAASG,KAAKD,IACpB,KAEDE,YAAe3D,IACbD,KAAKwD,SAASK,SAAQC,IACpBA,EAAKC,UAAUC,OAAO,0BAExBhE,KAAKwD,SAASvD,GAAI8D,UAAUE,IAAI,uBAChCjE,KAAKwD,SAASvD,GAAIiE,SApEpBpC,oBACEmB,OAAOkB,iBAAiB,SAAUnE,KAAKgD,UACvChD,KAAK2C,YAGPyB,uBACEnB,OAAOC,oBAAoB,SAAUlD,KAAKgD,UAiE5CqB,YAAYC,GACV,MAAMzD,EAAQyD,EAAIzE,KAAI,CAACiE,EAAMS,KAC3B,IAAIC,EAAW,CAAEtG,UAAW,SAQ5B,MALE,wEADA4F,EAAKxD,YAGLkE,EAAW,CAAEtG,UAAW,UAIxBtB,eAAA,MACEC,UAAU,aAEV6G,IAAK1D,KAAKyD,QACVrB,QAASA,KACPpC,KAAKyE,MAAMC,eAAeZ,EAAK7D,IAC/BD,KAAK4D,YAAYW,IAEnBI,UAAYC,IACG,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MACpB7E,KAAKyE,MAAMC,eAAeZ,EAAK7D,IAC/BD,KAAK4D,YAAYW,KAGrBO,SAAU,EAAEhI,SAAA,CAEZC,cAAA,OAAKoB,IAAK2F,EAAKxD,UAAWjC,IAAKyF,EAAK3D,KAAMjD,MAAOsH,IACjDzH,cAAA,OAAKF,UAAU,aAAYC,SAAEgH,EAAK3D,SAf7B2D,EAAK7D,OAmBhB,OAAOlD,cAAA,MAAIF,UAAU,aAAYC,SAAE+D,IAGrCkB,SACE,MAAM,SAAES,EAAQ,QAAEvB,EAAO,MAAEC,EAAK,eAAEuB,EAAc,OAAElD,EAAM,UAAEmD,GACxD1C,KAAKgB,MAEDH,EAAQb,KAAKqE,YAAY7B,GAEzBR,EAAed,EAAQnE,cAACkB,EAAW,IAAM,KACzCgE,EAAUhB,EAAUlE,cAACE,EAAO,IAAM,KAClCiF,EAAYjB,GAAWC,EAAiB,KAARL,EAEtC,OACEjE,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACxBkF,EACAC,EACAC,EACDnF,cAAA,UACEF,UAAU,mCACVkI,SAAUtC,EACVvF,MAAO,CAAEC,QAASuF,EAAY,OAAS,SACvCN,QAASA,IAAMpC,KAAK2C,UAAUpD,GAAQzC,SAEtCC,cAAA,OAAKF,UAAU,QAAOC,SAAC,oBAWlByF,Q,MC5IAyC,MAjBEA,IAETpI,eAAAqI,WAAA,CAAAnI,SAAA,CACIC,cAAA,KAAGF,UAAU,eAAcC,SAAC,iDAC5BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACrBF,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACnCC,cAAA,OAAKF,UAAU,2BACfE,cAAA,OAAKF,UAAU,4BAEnBE,cAAA,OAAKF,UAAU,0BACfE,cAAA,OAAKF,UAAU,0BACfE,cAAA,OAAKF,UAAU,gC,MCH/B,MAAMqI,UAAiBnE,YAAUxC,cAAA,SAAAiB,WAAA,KAC/BwB,MAAQ,CACNd,KAAM,KACNe,SAAS,EACTC,OAAO,GACP,KAEFC,cAAgB,IAAI7C,EAAgB,KAYpC8C,aAAgBlB,IACdF,KAAKqB,SAAS,CAAEnB,OAAMe,SAAS,KAC/B,KAEFK,cAAgB,KACdtB,KAAKqB,SAAS,CACZJ,SAAS,KAEX,KAEFM,QAAU,KACRvB,KAAKqB,SAAS,CACZJ,SAAS,EACTC,OAAO,KAET,KAEFM,WAAa,KACX,MAAM,OAAE2D,GAAWnF,KAAKyE,MACnBU,IAILnF,KAAKsB,gBACLtB,KAAKmB,cACFpB,aAAaoF,GACbvD,KAAK5B,KAAKoB,cACVS,MAAM7B,KAAKuB,WArChBO,oBACE9B,KAAKwB,aAGP4D,mBAAmBC,EAAWC,GACxBtF,KAAKyE,MAAMU,SAAWE,EAAUF,QAClCnF,KAAKwB,aAkCTO,SACE,MAAM,KAAE7B,EAAI,QAAEe,EAAO,MAAEC,GAAUlB,KAAKgB,MAEhCuE,EAAWrF,GAAQe,GAAWC,EAAQ,KAAOnE,cAACiI,EAAQ,IACtDhD,EAAed,EAAQnE,cAACkB,EAAW,IAAM,KACzCgE,EAAUhB,EAAUlE,cAACE,EAAO,IAAM,KAClCiF,EAAYjB,GAAWC,IAAUhB,EAA+B,KAAvBnD,cAACoF,EAAI,CAACjC,KAAMA,IAE3D,OACEtD,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACxByI,EACAvD,EACAC,EACAC,MAMT,MAAMC,EAAOG,IAAe,IAAd,KAAEpC,GAAMoC,EACpB,MAAM,KAAEnC,EAAI,YAAEC,EAAW,UAAEE,EAAS,SAAEG,EAAQ,KAAEE,EAAI,OAAEC,GAAWV,EAEjE,IAAIsE,EAAW,CAAEtG,UAAW,SAW5B,MARE,wEADAoC,IAGAkE,EAAW,CAAEtG,UAAW,UAGtB0C,EAAOnB,OAIT7C,eAAAqI,WAAA,CAAAnI,SAAA,CACEF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BC,cAAA,OAAKoB,IAAKmC,EAAWjC,IAAK8B,EAAMjD,MAAOsH,IACvC5H,eAAA,OAAAE,SAAA,CACEC,cAAA,OAAKF,UAAU,kBAAiBC,SAAEqD,IAClCvD,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,KAAGC,KAAMyD,EAAU5D,UAAU,sBAAqBC,SAChDC,cAAA,OAAKF,UAAU,QAAOC,SAAC,eAEzBC,cAAA,KAAGC,KAAM2D,EAAM9D,UAAU,2BAA0BC,SACjDC,cAAA,OAAKF,UAAU,QAAOC,SAAC,oBAK/BC,cAAA,OAAKF,UAAU,cAAaC,SAAEsD,IAC9BrD,cAAA,OAAKF,UAAU,eAAcC,SAAC,YAC9BF,eAAA,MAAIC,UAAU,oBAAmBC,SAAA,CAC9B8D,EAAOnB,OAAS,EAAI,KAAO,mBAC3BmB,EAAOf,KAAI,CAACiE,EAAMS,KAEjB,KAAIA,EAAI,GACR,OACExH,cAAA,MAAYF,UAAU,oBAAmBC,SACtCgH,EAAK3D,MADCoE,aAcNW,QC/Hf,MAAMM,UAAsBzE,YAAUxC,cAAA,SAAAiB,WAAA,KACpCwB,MAAQ,CACNE,OAAO,GAGTuE,kBAAkBvE,EAAOwE,GACvBC,QAAQC,IAAI1E,EAAOwE,GACnB1F,KAAKqB,SAAS,CACZH,OAAO,IAIXa,SACE,OAAI/B,KAAKgB,MAAME,MACNnE,cAACkB,EAAW,IAEd+B,KAAKyE,MAAM3H,UAIP0I,QCvBA,MAA0B,mCCUzC,MAAMK,UAAY9E,YAAUxC,cAAA,SAAAiB,WAAA,KAC1BwB,MAAQ,CACN8E,YAAa,MACb,KAEFpB,eAAkBzE,IAChBD,KAAKqB,SAAS,CACZyE,YAAa7F,KAIjB8B,SACE,OACEnF,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAACJ,EAAS,IACVC,eAAA,QAAAE,SAAA,CACEC,cAACyI,EAAa,CAAA1I,SACZC,cAAC+D,EAAU,MAEblE,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BC,cAACyI,EAAa,CAAA1I,SACZC,cAACwF,EAAQ,CAACmC,eAAgB1E,KAAK0E,mBAEjC3H,cAACyI,EAAa,CAAA1I,SACZC,cAACmI,EAAQ,CAACC,OAAQnF,KAAKgB,MAAM8E,mBAGjC/I,cAAA,OAAKF,UAAU,gBAAgBsB,IAAK4H,EAAY1H,IAAI,kBAS/CwH,Q,MCxCfG,IAASjE,OACPhF,cAACkJ,IAAMC,WAAU,CAAApJ,SACfC,cAAC8I,EAAG,MAENxC,SAAS8C,eAAe,W","file":"static/js/main.ce749f84.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <div  className=\"spinner\">\r\n            <svg style={{display:'block', margin: '0 auto'}}  xmlns=\"http://www.w3.org/2000/svg\" width=\"6em\" height=\"6em\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"currentColor\" d=\"M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z\" opacity=\"0.25\" />\r\n                <path fill=\"currentColor\" d=\"M10.72,19.9a8,8,0,0,1-6.5-9.79A7.77,7.77,0,0,1,10.4,4.16a8,8,0,0,1,9.49,6.52A1.54,1.54,0,0,0,21.38,12h.13a1.37,1.37,0,0,0,1.38-1.54,11,11,0,1,0-12.7,12.39A1.54,1.54,0,0,0,12,21.34h0A1.47,1.47,0,0,0,10.72,19.9Z\">\r\n                    <animateTransform attributeName=\"transform\" dur=\"0.75s\" repeatCount=\"indefinite\" type=\"rotate\" values=\"0 12 12;360 12 12\" /></path>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMesage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\"/>\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}\r\n        src={img} alt=\"error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMesage;","class MarvelService {\r\n  _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  _apiKey = \"apikey=64e87f61f8b009b9b44a4206749f6d05\";\r\n  _baseOffset = 210;\r\n\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  getAllCharacters = async (offset = this._baseOffset) => {\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`\r\n    );\r\n    return res.data.results.map(this._transformCharacter);\r\n  };\r\n\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters/${id}?${this._apiKey}`\r\n    );\r\n    return this._transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n}\r\n\r\nexport default MarvelService;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMesage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    // this.marvelService = new MarvelService(); тоже самое\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false })\n    }\n\n    onCharLoading = () =>{\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n        const errorMessage = error ? <ErrorMesage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\"\n                        onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? { objectFit: 'contain' } : {}} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMesage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport \"./charList.scss\";\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    loading: true,\n    error: false,\n    newItemLoading: false,\n    offset: 210,\n    charEnded: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.onScroll);\n    this.onRequest();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.onScroll);\n  }\n\n  onRequest = (offset) => {\n    this.onCharListLoading();\n    this.marvelService\n      .getAllCharacters(offset)\n      .then(this.onCharsLoaded)\n      .catch(this.onError);\n  };\n\n  onCharListLoading = () => {\n    this.setState({\n      newItemLoading: true,\n    });\n  };\n\n  onCharsLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    this.setState(({ charList, offset }) => ({\n      charList: [...charList, ...newCharList],\n      loading: false,\n      newItemLoading: false,\n      offset: offset + 9,\n      charEnded: ended,\n    }));\n  };\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true,\n    });\n  };\n\n  onScroll = () => {\n    if (this.state.newItemLoading) return;\n    if (this.state.charEnded) {\n      window.removeEventListener(\"scoll\", this.onScroll);\n    }\n\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      this.onCharListLoading();\n      this.onRequest(this.state.offset);\n    }\n  };\n\n  itemRefs = [];\n\n  setRefs = ref => {\n    this.itemRefs.push(ref)\n  }\n\n  focusOnItem = (id) => {\n    this.itemRefs.forEach(item => {\n      item.classList.remove('char__item_selected');\n    })\n    this.itemRefs[id].classList.add('char__item_selected');\n    this.itemRefs[id].focus();\n  } \n\n  renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          key={item.id}\n          ref={this.setRefs}\n          onClick={() => {\n            this.props.onCharSelected(item.id);\n            this.focusOnItem(i);\n          }}\n          onKeyDown={(e) => {\n            if(e.key === ' ' || e.key === 'Enter'){\n              this.props.onCharSelected(item.id);\n              this.focusOnItem(i);\n            }\n          }}\n          tabIndex={0}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  render() {\n    const { charList, loading, error, newItemLoading, offset, charEnded } =\n      this.state;\n\n    const items = this.renderItems(charList);\n\n    const errorMessage = error ? <ErrorMesage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n      <div className=\"char__list\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <button\n          className=\"button button__main button__long\"\n          disabled={newItemLoading}\n          style={{ display: charEnded ? \"none\" : \"block\" }}\n          onClick={() => this.onRequest(offset)}\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMesage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport \"./charInfo.scss\";\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false });\n  };\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true,\n    });\n  };\n\n  updateChar = () => {\n    const { charId } = this.props;\n    if (!charId) {\n      return;\n    }\n\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { char, loading, error } = this.state;\n\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMesage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"char__info\">\n        {skeleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"unset\" };\n  }\n\n  if (comics.length === 0) {\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"Comics not found\"}\n        {comics.map((item, i) => {\n          // eslint-disable-next-line\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;\n","import { Component } from \"react\";\r\nimport ErrorMesage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMesage />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nclass App extends Component {\n  state = {\n    selecedChar: null,\n  };\n\n  onCharSelected = (id) => {\n    this.setState({\n      selecedChar: id,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader />\n        <main>\n          <ErrorBoundary>\n            <RandomChar />\n          </ErrorBoundary>\n          <div className=\"char__content\">\n            <ErrorBoundary>\n              <CharList onCharSelected={this.onCharSelected} />\n            </ErrorBoundary>\n            <ErrorBoundary>\n              <CharInfo charId={this.state.selecedChar} />\n            </ErrorBoundary>\n          </div>\n          <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n        </main>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\n\nimport \"./style/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}