{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js"],"names":["ErrorMesage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_baseOffset","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","item","_item$textObjects$","title","price","prices","pageCount","language","textObjects","getAllCharacters","offset","res","results","map","getCharacter","getAllComics","getComic","View","_ref","_jsxs","className","children","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharsLoaded","finally","newCharList","ended","addChar","index","setTimeout","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","arr","i","imgStyle","CSSTransition","timeout","classNames","ref","el","onCharSelected","onKeyDown","key","tabIndex","TransitionGroup","component","renderItems","disabled","Skeleton","_Fragment","comicUrl","resourceURI","CharInfo","charId","skeleton","ErrorBoundary","Component","constructor","state","componentDidCatch","errorInfo","console","log","this","setState","render","MainPage","selecedChar"],"mappings":"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","file":"static/js/3.907b86f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMesage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\"/>\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}\r\n        src={img} alt=\"error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMesage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=64e87f61f8b009b9b44a4206749f6d05\";\r\n  const _baseOffset = 220;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    const res = await request(`\r\n    ${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}\r\n    `);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`\r\n    ${_apiBase}/comics/${id}?${_apiKey}\r\n    `);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (item) => {\r\n    return {\r\n      id: item.id,\r\n      title: item.title,\r\n      thumbnail: item.thumbnail.path + \".\" + item.thumbnail.extension,\r\n      price: item.prices[0].price\r\n        ? `${item.prices[0].price}$`\r\n        : `not available`,\r\n      description: item.description || \"There is no description\",\r\n      pageCount: item.pageCount\r\n        ? `${item.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      language: item.textObjects[0]?.language || \"en-us\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n  return {loading, request, error, clearError}\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMesage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState({});\r\n\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMesage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button className=\"button button__main\" onClick={updateChar}>\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className=\"randomchar__img\"\r\n        style={\r\n          thumbnail ===\r\n          \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n            ? { objectFit: \"contain\" }\r\n            : {}\r\n        }\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMesage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      // window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newItemLoading && !loading) {\r\n      onRequest(offset);\r\n    }\r\n  }, [newItemLoading]);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllCharacters(offset)\r\n      .then(onCharsLoaded)\r\n      .finally(() => setNewItemLoading(false));\r\n  };\r\n\r\n  const onCharsLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    const addChar = (index) => {\r\n      if (index < newCharList.length) {\r\n        setCharList((charList) => [...charList, newCharList[index]]);\r\n        setTimeout(() => addChar(index + 1), 100);\r\n      } else {\r\n        setOffset((offset) => offset + newCharList.length);\r\n        setCharEnded(ended);\r\n      }\r\n    };\r\n    addChar(0);\r\n  };\r\n\r\n  // const onScroll = () => {\r\n  //   if (newItemLoading) return;\r\n  //   if (charEnded) {\r\n  //     window.removeEventListener('scoll', onScroll);\r\n  //   }\r\n  //   if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\r\n  //     // onCharListLoading();\r\n  //     setNewItemLoading(true);\r\n  //   }\r\n  // };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) => {\r\n      item.classList.remove('char__item_selected');\r\n    });\r\n    itemRefs.current[id].classList.add('char__item_selected');\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { objectFit: 'cover' };\r\n      if (\r\n        item.thumbnail ===\r\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\r\n      ) {\r\n        imgStyle = { objectFit: 'unset' };\r\n      }\r\n\r\n      return (\r\n        <CSSTransition timeout={500} classNames=\"char__item\" key={item.id}>\r\n          <li\r\n            className=\"char__item\"\r\n            key={item.id}\r\n            ref={(el) => (itemRefs.current[i] = el)}\r\n            onClick={() => {\r\n              props.onCharSelected(item.id);\r\n              focusOnItem(i);\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === ' ' || e.key === 'Enter') {\r\n                props.onCharSelected(item.id);\r\n                focusOnItem(i);\r\n              }\r\n            }}\r\n            tabIndex={0}\r\n          >\r\n            <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n            <div className=\"char__name\">{item.name}</div>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <TransitionGroup component={'ul'} className=\"char__grid\">\r\n        {items}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n\r\n  const items = renderItems(charList);\r\n\r\n  const errorMessage = error ? <ErrorMesage /> : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {items}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? 'none' : 'block' }}\r\n        onClick={() => setNewItemLoading(true)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMesage from \"../errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { error, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, [props.charId]);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    setLoading(false);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    const { charId } = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    clearError();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMesage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n  let imgStyle = { objectFit: \"cover\" };\r\n  if (\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n  ) {\r\n    imgStyle = { objectFit: \"unset\" };\r\n  }\r\n\r\n  if (comics.length === 0) {\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? null : \"Comics not found\"}\r\n        {comics.map((item, i) => {\r\n          const comicUrl = item.resourceURI.slice(-5);\r\n          // eslint-disable-next-line\r\n          if (i > 9) return;\r\n          return (\r\n            <li key={i} className=\"char__comics-item\">\r\n              <a href={`/marvel/comics/${comicUrl}`}>{item.name}</a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { Component } from \"react\";\r\nimport ErrorMesage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMesage />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\n\r\nconst MainPage = () => {\r\n  const [selecedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selecedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}