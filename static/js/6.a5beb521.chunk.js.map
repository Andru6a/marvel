{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_baseOffset","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","item","_item$textObjects$","title","price","prices","pageCount","language","textObjects","getAllCharacters","offset","res","results","map","getCharacter","getAllComics","getComic","getCharacterByName","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","props","comicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsLoaded","newComicsList","ended","addChar","index","setTimeout","errorMessage","spinner","Spinner","arr","i","imgStyle","CSSTransition","timeout","classNames","Link","to","TransitionGroup","component","renderItems","onClick","disabled","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/6.a5beb521.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\"/>\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}\r\n        src={img} alt=\"error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=64e87f61f8b009b9b44a4206749f6d05\";\r\n  const _baseOffset = 220;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n    if(!char) {\r\n      const error = 'The character was not found. Check the name and try again'\r\n      return error;\r\n    }\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    const res = await request(`\r\n    ${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}\r\n    `);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`\r\n    ${_apiBase}/comics/${id}?${_apiKey}\r\n    `);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (item) => {\r\n    return {\r\n      id: item.id,\r\n      title: item.title,\r\n      thumbnail: item.thumbnail.path + \".\" + item.thumbnail.extension,\r\n      price: item.prices[0].price\r\n        ? `${item.prices[0].price}$`\r\n        : `not available`,\r\n      description: item.description || \"There is no description\",\r\n      pageCount: item.pageCount\r\n        ? `${item.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      language: item.textObjects[0]?.language || \"en-us\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n    getCharacterByName,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n  return {loading, request, error, clearError}\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner show\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n  \n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsLoaded);\n  };\n\n  const onComicsLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    const addChar = (index) => {\n      if (index < newComicsList.length) {\n        setComicsList((comicsList) => [...comicsList, newComicsList[index]]);\n        setTimeout(() => addChar(index + 1), 200);\n      } else {\n        setOffset((offset) => offset + newComicsList.length);\n        setNewItemLoading(false);\n        setComicsEnded(ended);\n      }\n    };\n\n    addChar(0);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: 'cover' };\n      if (\n        item.thumbnail ===\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n      ) {\n        imgStyle = { objectFit: 'unset' };\n      }\n      return (\n        <CSSTransition timeout={500} classNames=\"comics__item\" key={i}>\n          <li className=\"comics__item\" key={i}>\n            <Link to={`/marvel/comics/${item.id}`}>\n              <img\n                src={item.thumbnail}\n                alt={item.title}\n                className=\"comics__item-img\"\n                style={imgStyle}\n              />\n              <div className=\"comics__item-name\">{item.title}</div>\n              <div className=\"comics__item-price\">{item.price}</div>\n            </Link>\n          </li>\n        </CSSTransition>\n      );\n    });\n    return (\n      <TransitionGroup component={'ul'} className=\"comics__grid\">\n        {items}\n      </TransitionGroup>\n    );\n  }\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n  const items = renderItems(comicsList);\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n\n      <button\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n    <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}