{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","request","clearError","process","setProcess","useHttp","useState","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","json","e","_apiBase","_apiKey","_baseOffset","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","item","_item$textObjects$","title","price","prices","pageCount","language","textObjects","getAllCharacters","offset","res","data","results","map","getCharacter","getAllComics","getComic","getCharacterByName","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","AppBanner","avengers","avengersLogo","SingleComicPage","_ref","dataType","useParams","setData","useEffect","updateData","onComicLoaded","then","console","log"],"mappings":"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","file":"static/js/6.261cf3f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\"/>\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}\r\n        src={img} alt=\"error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=64e87f61f8b009b9b44a4206749f6d05';\r\n  const _baseOffset = 220;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    const res = await request(`\r\n    ${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}\r\n    `);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`\r\n    ${_apiBase}/comics/${id}?${_apiKey}\r\n    `);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (item) => {\r\n    return {\r\n      id: item.id,\r\n      title: item.title,\r\n      thumbnail: item.thumbnail.path + '.' + item.thumbnail.extension,\r\n      price: item.prices[0].price\r\n        ? `${item.prices[0].price}$`\r\n        : `not available`,\r\n      description: item.description || 'There is no description',\r\n      pageCount: item.pageCount\r\n        ? `${item.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      language: item.textObjects[0]?.language || 'en-us',\r\n    };\r\n  };\r\n\r\n  return {\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllComics,\r\n    getComic,\r\n    getCharacterByName,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'Content-Type': 'application/json' }\r\n    ) => {\r\n      setProcess('loading');\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n      } catch (e) {\r\n        setProcess('error');\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton />;\r\n    case 'loading':\r\n      return <Spinner />;\r\n    case 'confirmed':\r\n      return <Component data={data} />;\r\n    case 'error':\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n};\r\n\r\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner show\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useParams } from 'react-router-dom';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nconst SingleComicPage = ({ Component, dataType }) => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const { getComic, getCharacter, clearError, process, setProcess } =\r\n    useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n    \r\n    // eslint-disable-next-line\r\n  }, [id]);\r\n\r\n  const onComicLoaded = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  const updateData = () => {\r\n    clearError();\r\n\r\n    switch (dataType) {\r\n      case 'comic':\r\n        getComic(id)\r\n          .then(onComicLoaded)\r\n          .then(() => setProcess('confirmed'));\r\n        break;\r\n      case 'character':\r\n        getCharacter(id)\r\n          .then(onComicLoaded)\r\n          .then(() => setProcess('confirmed'));\r\n        break;\r\n      default:\r\n        console.log('not found');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {setContent(process, Component, data)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n"],"sourceRoot":""}